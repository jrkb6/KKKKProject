//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KKKPr.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeLog", Namespace="http://schemas.datacontract.org/2004/07/LogService")]
    [System.SerializableAttribute()]
    public partial class CompositeLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime logDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string machineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string machineIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime logDate {
            get {
                return this.logDateField;
            }
            set {
                if ((this.logDateField.Equals(value) != true)) {
                    this.logDateField = value;
                    this.RaisePropertyChanged("logDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string machine {
            get {
                return this.machineField;
            }
            set {
                if ((object.ReferenceEquals(this.machineField, value) != true)) {
                    this.machineField = value;
                    this.RaisePropertyChanged("machine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string machineIP {
            get {
                return this.machineIPField;
            }
            set {
                if ((object.ReferenceEquals(this.machineIPField, value) != true)) {
                    this.machineIPField = value;
                    this.RaisePropertyChanged("machineIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sendLog", ReplyAction="http://tempuri.org/IService1/sendLogResponse")]
        void sendLog(KKKPr.ServiceReference1.CompositeLog lg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sendLog", ReplyAction="http://tempuri.org/IService1/sendLogResponse")]
        System.Threading.Tasks.Task sendLogAsync(KKKPr.ServiceReference1.CompositeLog lg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : KKKPr.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<KKKPr.ServiceReference1.IService1>, KKKPr.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void sendLog(KKKPr.ServiceReference1.CompositeLog lg) {
            base.Channel.sendLog(lg);
        }
        
        public System.Threading.Tasks.Task sendLogAsync(KKKPr.ServiceReference1.CompositeLog lg) {
            return base.Channel.sendLogAsync(lg);
        }
    }
}
